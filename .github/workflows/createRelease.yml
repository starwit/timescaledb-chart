name: Create release

# Creating maven and github release

on:
  workflow_dispatch:
    inputs:
      release-version: # id of input
        description: "override default release version e.g. with 0.1.0-1"
        required: false

permissions:
  contents: write
  packages: read

env:
  RELEASE_VERSION: ${{ github.event.inputs.release-version }}
  IMAGE_NAME: urbalytix
  DOCKERHUB_USERNAME: starwit
  DOCKERHUB_ORG: starwitorg  

jobs:
  build:
    name: "Creating github release"
    runs-on: [self-hosted, linux, X64]
    
    steps:
    - name: Install GH CLI
      uses: dev-hanz-ops/install-gh-cli-action@v0.2.0

    - name: checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: '0'

    - name: Get tag name
      run: |
        echo "TAG=$( git describe --abbrev=0 )" >> $GITHUB_ENV

    - name: Create github release
      run: gh release create ${{ env.TAG }} -F CHANGELOG.md
      env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout tag
      run: |
        git checkout ${{ env.TAG }}

  publish_helm:
    name: "Publish helm chart"
    needs: build
    runs-on: [self-hosted, linux, X64]
    
    steps:
    - name: get helm
      uses: azure/setup-helm@v4

    - name: login to Helm registry
      run: helm registry login registry-1.docker.io -u starwit -p ${{ secrets.DOCKERHUB_TOKEN }}

    - name: run helm update
      working-directory: timescaledb
      run: helm dep update

    - name: run helm package
      run: helm package timescaledb

    - name: get version number
      working-directory: timescaledb
      run: |
        echo "HELM_VERSION=$(grep version: Chart.yaml | head -1 | awk '{print $2}')" >> $GITHUB_ENV

    - name: run helm push
      run: helm push timescaledb-chart-${{ env.HELM_VERSION }}.tgz oci://registry-1.docker.io/starwitorg